DROP TABLE IF EXISTS LIKES, USERS, FILMS, FILM_MPA, MPA, GENRE, FILM_GENRE, FRIENDS CASCADE;

CREATE TABLE IF NOT EXISTS USERS (
        user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR(60) NOT NULL,
        email VARCHAR(254) NOT NULL,
        login VARCHAR(36) NOT NULL,
        birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS FRIENDS (
        friend_one_id INTEGER REFERENCES USERS (user_id) ON DELETE CASCADE,
        friend_two_id INTEGER REFERENCES USERS (user_id) ON DELETE CASCADE,
        status boolean
);

CREATE TABLE IF NOT EXISTS FILMS (
        film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        description VARCHAR(1500) NOT NULL,
        release_date DATE NOT NULL,
        duration INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS GENRE (
        genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        genre_name VARCHAR(60) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_GENRE (
        genre_id INTEGER REFERENCES GENRE (genre_id) ON DELETE CASCADE,
        film_id INTEGER REFERENCES FILMS (film_id) ON DELETE CASCADE,
        PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS LIKES (
        user_id INTEGER REFERENCES USERS (user_id) ON DELETE CASCADE,
        film_id INTEGER REFERENCES FILMS (film_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS MPA (
        mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        mpa_name VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS FILM_MPA (
        film_id INTEGER REFERENCES FILMS (film_id) ON DELETE CASCADE,
        mpa_id INTEGER REFERENCES MPA (mpa_id) ON DELETE CASCADE,
        PRIMARY KEY (film_id, mpa_id)
);